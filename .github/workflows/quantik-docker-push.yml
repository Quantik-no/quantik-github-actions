name: Quantik Docker Build

on:
  workflow_call:
    secrets:
      nuget-auth-token:
        required: false
        description: 'The PAT for accessing the nuget local repo'
      git-auth-token:
        required: false
        description: 'The PAT for accessing git repos via .netrc'
      acr-password:
        required: false
      acr-name:
        required: false
      acr-username:
        required: false

    inputs:
      working-directory:
        required: false
        type: string
        default: "./"

      git-auth-user:
        required: false
        type: string
        description: 'The user connected to git-auth-token PAT'

      nuget-auth-name:
        required: false
        type: string

      nuget-source-url:
        required: false
        type: string
        default: https://nuget.pkg.github.com/quantik-no/index.json

      image-name:
        required: false
        type: string
        default: "${{ github.event.repository.name }}"

      # gcp-oidc:
      #   required: false
      #   type: string
      #   default: projects/545027634067/locations/global/workloadIdentityPools/github-identity-pool/providers/github-identity-provider

      # gcp-sa:
      #   required: false
      #   default: github-actions-sa@qt-github-oidc.iam.gserviceaccount.com
      #   type: string

      dockerfile:
        required: false
        type: string
        default: "Dockerfile"
      pull-before-push:
        required: false
        type: boolean
        default: false
      context:
        required: false
        type: string
        default: "."
      pull-repo:
        required: false
        type: string
        description: "An input for setting an extra repo in case you want to pull from e.g dev and push to prod"
      # gar-name:
      #   required: false
      #   type: string
      semver:
        required: false
        type: boolean
        default: true
permissions:

  id-token: write # This is required for requesting the JWT
  contents: read

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest

    env:
      NUGET_AUTH_TOKEN: ${{ secrets.nuget_auth_token }}
      PERFORM_PUSH: ${{ github.event_name != 'pull_request' }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: git-describe-semver
        uses: choffmeister/git-describe-semver@main
        with:
          version: latest
          dir: .
          fallback: v0.0.0
          drop-prefix: true
          prerelease-timestamped: true
          format: "::set-output name=version::<version>"
          continue-on-error: true
      - name: Docker meta semver version
        id: meta-semver
        uses: docker/metadata-action@v4
        if: steps.git_describe_semver.outcome == 'success' && inputs.semver
        with:
          images: |
            # ${{ inputs.gar-name }}/${{ inputs.image-name }}
            ${{ secrets.acr-name }}/${{ inputs.image-name }}
          labels: |
            org.opencontainers.image.version=${{ steps.git_describe_semver.outputs.version }}
            org.opencontainers.image.vendor=Quantik AS
          tags: |
            type=sha,format=long
            type=raw,value=${{ steps.git_describe_semver.outputs.version }}

      - name: Docker meta for semver fallback
        id: fallback-version
        if: steps.git_describe_semver.outcome == 'failure' || !inputs.semver
        run: echo "::set-output name=version::$(printf '%(%Y-%m-%d)T' -1)-$(printf "%05d" ${{ github.run_number }})"
      - name: Docker meta fallback version
        id: meta-fallback
        uses: docker/metadata-action@v4
        if: steps.git_describe_semver.outcome == 'failure' || !inputs.semver
        with:
          images: |
            # ${{ inputs.gar-name }}/${{ inputs.image-name }}
            ${{ secrets.acr-name }}/${{ inputs.image-name }}
          labels: |
            org.opencontainers.image.version=${{ steps.fallback-version.outputs.version }}
            org.opencontainers.image.vendor=Quantik AS
          tags: |
            type=sha,format=long
            type=raw,value=${{ steps.fallback-version.outputs.version }}

      - name: Docker meta for pull before push
        id: pull-repo
        if: inputs.pull-repo != ''
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ inputs.pull-repo }}/${{ inputs.image-name }}
          tags: |
            type=sha,format=long

      - name: Login to azure dev docker registry
        uses: azure/docker-login@v1
        if: env.PERFORM_PUSH == 'true'
        with:
          login-server: ${{ secrets.acr-name }}
          username: ${{ secrets.acr-username }}
          password: ${{ secrets.acr-password }}

      # - name: Authenticate to Google Cloud
      #   id: auth
      #   if: env.PERFORM_PUSH == 'true'
      #   uses: 'google-github-actions/auth@v0.8.1'
      #   with:
      #     workload_identity_provider: '${{ inputs.gcp-oidc }}'
      #     service_account: '${{ inputs.gcp-sa }}'
      #     token_format: "access_token"
      #     access_token_lifetime: "300s"

      # - name: sign-in to artifact registry
      #   if: env.PERFORM_PUSH == 'true'
      #   run: |
      #     gcloud auth configure-docker europe-docker.pkg.dev --quiet

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
          source-url: ${{ inputs.nuget-source-url }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.nuget-auth-token }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.context }}
          platforms: linux/amd64  #,linux/arm64
          file: ${{ inputs.working-directory }}/${{ inputs.dockerfile }}
          pull: ${{ inputs.pull-before-push }}
          push: ${{ env.PERFORM_PUSH }}
          tags: |
            ${{ steps.meta-semver.outputs.tags }}
            ${{ steps.meta-fallback.outputs.tags }}
            ${{ steps.pull-repo.outputs.tags }}

          labels: |
            ${{ steps.meta-semver.outputs.labels }}
            ${{ steps.meta-fallback.outputs.labels }}

          secrets:
            "netrc=machine github.com login ${{ inputs.git-auth-user }} password ${{ secrets.git-auth-token}}"
          secret-files: |
            nugetconfig=${{ github.workspace }}/../nuget.config
            nugetpublic=${{ github.workspace }}/nuget.config
            gitconfig=${{ github.workspace }}/.gitconfig


